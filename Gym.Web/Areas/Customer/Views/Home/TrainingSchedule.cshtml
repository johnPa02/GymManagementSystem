@model IEnumerable<Gym.ViewModels.TrainingScheduleViewModel>

@{
    ViewData["Title"] = "Weekly Training Schedule";
    var startOfWeek = (DateTime)ViewBag.StartOfWeek;
    var endOfWeek = (DateTime)ViewBag.EndOfWeek;
}

<div class="container training-schedule mt-5">
    <h2 style="text-align: center; margin-bottom: 30px 0px;">LỊCH TẬP</h2>
    <div class="row">
        <div class="col-md-9">
            <a href="@Url.Action("TrainingSchedule", new { date = startOfWeek.AddDays(-7).ToString("dd-MM-yyyy") })" class="btn btn-dark">Tuần Trước</a>
            <a href="@Url.Action("TrainingSchedule", new { date = startOfWeek.AddDays(7).ToString("dd-MM-yyyy") })" class="btn btn-dark">Tuần Tiếp Theo</a>
        </div>
        <div class="col-md-2">
            <input type="text" class="form-control" style="font-size: 15px;" name="date" value="@ViewBag.StartOfWeek.ToString("dd-MM-yyyy") - @ViewBag.EndOfWeek.ToString("dd-MM-yyyy") " readonly>
        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Thứ Hai</th>
                <th>Thứ Ba</th>
                <th>Thứ Tư</th>
                <th>Thứ Năm</th>
                <th>Thứ Sáu</th>
                <th>Thứ Bảy</th>
                <th>Chủ Nhật</th>
            </tr>
        </thead>
        <tbody>
            <!-- 8AM - 10AM -->
            <tr>
                @for (int day = 1; day <= 7; day++)
                {
                    var dailySchedule = Model
                        .Where(m => m.StartTime.DayOfWeek == (DayOfWeek)(day % 7) && m.StartTime.Hour >= 8 && m.StartTime.Hour <= 10)
                        .OrderBy(m => m.StartTime);

                    <td>
                        @foreach (var item in dailySchedule)
                        {
                            <div class="class-block">
                                <span class="class-time">@item.StartTime.ToString("HH:mm")</span>
                                <span class="class-name">@item.Description</span>
                                <span class="instructor-name">@item.TrainerName</span>
                            </div>
                        }

                        @if (!dailySchedule.Any())
                        {
                            <div class="class-block empty">
                                <span class="class-time">---</span>
                                <span class="class-name">No class</span>
                            </div>
                        }
                    </td>
                }
            </tr>

            <!-- 2PM - 5PM -->
            <tr>
                @for (int day = 1; day <= 7; day++)
                {
                    var dailySchedule = Model
                        .Where(m => m.StartTime.DayOfWeek == (DayOfWeek)(day % 7) && m.StartTime.Hour >= 14 && m.StartTime.Hour <= 17)
                        .OrderBy(m => m.StartTime);

                    <td>
                        @foreach (var item in dailySchedule)
                        {
                            <div class="class-block">
                                <span class="class-time">@item.StartTime.ToString("HH:mm")</span>
                                <span class="class-name">@item.Description</span>
                                <span class="instructor-name">@item.TrainerName</span>
                            </div>
                        }

                        @if (!dailySchedule.Any())
                        {
                            <div class="class-block empty">
                                <span class="class-time">---</span>
                                <span class="class-name">No class</span>
                            </div>
                        }
                    </td>
                }
            </tr>

            <!-- 7PM - 10PM -->
            <tr>
                @for (int day = 1; day <= 7; day++)
                {
                    var dailySchedule = Model
                        .Where(m => m.StartTime.DayOfWeek == (DayOfWeek)(day % 7) && m.StartTime.Hour >= 19 && m.StartTime.Hour <= 22)
                        .OrderBy(m => m.StartTime);

                    <td>
                        @foreach (var item in dailySchedule)
                        {
                            <div class="class-block">
                                <span class="class-time">@item.StartTime.ToString("HH:mm")</span>
                                <span class="class-name">@item.Description</span>
                                <span class="instructor-name">@item.TrainerName</span>
                            </div>
                        }

                        @if (!dailySchedule.Any())
                        {
                            <div class="class-block empty">
                                <span class="class-time">---</span>
                                <span class="class-name">No class</span>
                            </div>
                        }
                    </td>
                }
            </tr>
        </tbody>
    </table>
</div>

<style>
    .training-schedule {
        padding-top: 30px;
    }

    .training-schedule .table {
        width: 90%;
    }

    .training-schedule td {
        vertical-align: top;
    }

    .class-block {
        padding: 10px;
        margin-bottom: 5px;
        border-radius: 5px;
        border: 1px solid #ddd;
    }

    .class-block.empty {
        background-color: #f8f9fa;
    }

    .class-time {
        font-weight: bold;
    }

    .class-name {
        display: block;
    }

    .instructor-name {
        display: block;
        font-style: italic;
    }
</style>
